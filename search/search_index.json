{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"General/","title":"Home","text":""},{"location":"General/#draft-structure","title":"Draft Structure:","text":"<p>Insipiration:</p> <ul> <li>Koesterlab Handbook</li> <li>Candice Morey Lab Handbook</li> <li>Baby Lab Handbook</li> <li>Lowe Power Lab Handbook</li> <li>Vortex Lab Handbook</li> </ul>"},{"location":"General/#development-documentation","title":"Development Documentation","text":"<p>See Contributing to the Lab Handbook for more information.</p>"},{"location":"General/01_Lab_Mission/","title":"Mission Statement","text":"<p>TODO::Add this</p>"},{"location":"General/Code_Of_Conduct/","title":"BHKLab Code of Conduct","text":"<p>TODO::</p>"},{"location":"General/Manuscripts/","title":"Manuscript Standards","text":"<p>TODO::</p>"},{"location":"General/Presentations/","title":"Presentation Standards","text":"<p>TODO::</p>"},{"location":"General/Presentations/#poster-standards","title":"Poster Standards","text":""},{"location":"General/Presentations/#talk-standards","title":"Talk Standards","text":""},{"location":"contributing/0_getting-started/","title":"Contributing to the Lab Handbook","text":"<p>Thank you for your interest in contributing to the Lab Handbook! This section will guide you through the process of setting up your development environment, installing dependencies, and building the documentation.</p>"},{"location":"contributing/0_getting-started/#getting-started","title":"Getting Started","text":"<p>Before you begin, you should have the following:</p> <ol> <li>A GitHub account.</li> <li><code>pixi</code> installed.</li> </ol> <p>See Prerequisites for more information.</p>"},{"location":"contributing/1_prerequisites/","title":"Prerequisites","text":""},{"location":"contributing/1_prerequisites/#installing-pixi","title":"Installing Pixi","text":"<p>Pixi is a tool for managing conda environments and dependencies. To install Pixi, visit the Pixi website and follow the instructions specific to your operating system. The Pixi documentation is an extensive resource for learning how to use Pixi.</p> <p>Running the following command in your terminal should verify installation. <pre><code>$pixi --version\npixi 0.34.0\n</code></pre></p>"},{"location":"contributing/1_prerequisites/#cloning-the-repository","title":"Cloning the Repository","text":"<p>To begin, clone the repository to your local machine using the following command:</p> <pre><code>$ git clone https://github.com/bhklab/handbook.git\nCloning into 'handbook'...\n....\n....\n....\n...\n$ cd handbook\n</code></pre>"},{"location":"contributing/1_prerequisites/#installing-dependencies","title":"Installing Dependencies","text":"<p>Once you have cloned the repository, navigate to the project directory and install the dependencies:</p> <pre><code>$ pixi install\n\u2714 The default environment has been installed.\n</code></pre> <p>This will install the dependencies specified in the <code>pixi.toml</code> file.</p> <p>To add content to the handbook, see the Adding Content section.</p>"},{"location":"contributing/adding_content/","title":"Adding Content","text":""},{"location":"contributing/adding_content/#introduction","title":"Introduction","text":"<p>This document will guide you through the process of adding a new page to the handbook.</p> <p>Note</p> <p>This section assumes you have already completed the Prerequisites section.</p>"},{"location":"contributing/adding_content/#mkdocs","title":"MkDocs","text":"<p>The handbook is built using MkDocs and Material for MkDocs. These tools also have extensive documentation and guides for contributing to a Mkdocs project.</p> <p>Please refer to their respective documentation first for any questions you might have.</p>"},{"location":"contributing/adding_content/#adding-content-to-the-documentation","title":"Adding Content to the Documentation","text":"<p>The documentation is written in Markdown and can be found in the <code>docs</code> directory.</p> <p>Here are the steps to add new content to the documentation:</p>"},{"location":"contributing/adding_content/#1-create-a-branch-for-your-changes","title":"1. Create a branch for your changes.","text":"Note: Naming your branch <p>A branch is a way to work on a new feature or bug fix without affecting the main branch. The standard for this project is to use the following format:</p> <p><pre><code>$ &lt;author-ID&gt;/&lt;purpose-of-branch&gt;\nOR\n$ &lt;author-ID&gt;/&lt;issue-reference&gt;\n</code></pre> Where <code>&lt;author-ID&gt;</code> can be a GitHub username or an alias.</p> <p><code>&lt;purpose-of-branch&gt;</code> is a short description of the changes you are making. <code>&lt;issue-reference&gt;</code> is the number of the issue you are working on.</p> <p>For example:</p> <pre><code>$ jjjermiah/adding-getting-started-page\nOR\n$ jjjermiah/13-docs-finish-tutorial-for-page-review\n</code></pre> <p>To create a new branch and switch to it, run the following command: <pre><code>git checkout -b &lt;branch-name&gt;\n$ git checkout -b jjjermiah/adding-getting-started-page\n</code></pre></p> <p>If you already have a named branch, you can switch to it with the following command:</p> <pre><code>$ git switch jjjermiah/adding-getting-started-page\n</code></pre>"},{"location":"contributing/adding_content/#2-add-your-new-content-to-the-docs-directory","title":"2. Add your new content to the <code>docs</code> directory.","text":"<p>Let's say you want to add a new page to the <code>Onboarding</code> section. You would add a new file to the <code>docs/onboarding</code> directory.</p> <pre><code>$ touch docs/onboarding/my_new_page.md\n</code></pre>"},{"location":"contributing/adding_content/#3-preview-your-changes","title":"3. Preview your changes.","text":"<p>The following is a <code>pixi task</code> that will start a local server and preview the documentation at <code>http://localhost:8000</code>.</p> <pre><code>$ pixi run serve\n</code></pre> <p>You should see your changes appear at <code>http://127.0.0.1:8000/handbook/onboarding/my_new_page/</code></p>"},{"location":"contributing/adding_content/#4-commit-and-push-your-changes-to-your-branch","title":"4. Commit and push your changes to your branch.","text":"<pre><code>$ git add .\n$ git commit -m \"Add new getting started page\"\n$ git push\n</code></pre>"},{"location":"contributing/adding_content/#5-create-a-pr","title":"5. Create a PR","text":"<p>Create a pull request (PR) to merge your changes into the main branch. Request a review from a maintainer.</p> <p>See the section on Reviewing a Contribution for more information.</p>"},{"location":"contributing/merging_pr/","title":"Merging Pull Requests","text":"<p>For Maintainers</p> <p>Only a subset of members of the BHK Lab organization can merge pull requests. If you are a maintainer, you can merge a pull request by following the steps below.</p>"},{"location":"contributing/merging_pr/#validating-the-pull-request","title":"Validating the Pull Request","text":"<p>Before merging a pull request, it is important to validate the following:</p> <ol> <li>Does the pull request have a title that is descriptive and concise?</li> <li>Do all the Github Actions pass?</li> <li>Has the pull request been reviewed by at least one member of the lab?</li> <li>Are there any merge conflicts?</li> <li>Does the PR add files that should not be added or mistakes? (i.e <code>.DS_Store</code>)</li> </ol>"},{"location":"contributing/merging_pr/#merge-strategy","title":"Merge Strategy","text":"<p>Traditionally, when merging a pull request, all the commits from the pull request are added to the main branch as individual commits along with a merge commit (usually like <code>Merge pull request #123 from user/branch</code>).</p> <p>This is called a Merge Commit.</p> Merge commit example <p>We will be using the Squash Merge strategy for merging pull requests.</p> <p>Squash merges are a way to combine multiple commits into a single commit. Instead of seeing all the author's individual commits in the main branch's commit history, you can see a single commit summarizing all the changes.</p> Squash merge example <p>More information on squash merges can be found in the GitHub Docs on Squash Merges</p> <p>This has a few benefits:</p> <ol> <li>It keeps the commit history clean and organized.</li> <li>It reduces the number of commits in the main branch, making it easier to manage.</li> <li>Avoids the <code>Merge branch 'main' into main</code> commit that is created when merging    a pull request in favor of using the <code>PR</code> title as the commit message.</li> </ol>"},{"location":"contributing/merging_pr/#merging-a-pull-request","title":"Merging a Pull Request","text":"<p>To merge a pull request, follow these steps:</p>"},{"location":"contributing/merging_pr/#click-on-the-squash-and-merge-button","title":"Click on the \"Squash and merge\" button.","text":""},{"location":"contributing/merging_pr/#modify-the-commit-message-as-needed","title":"Modify the commit message as needed.","text":"<p>By default, the commit message will be the title of the pull request. The body of the commit message will include all the commits from the pull request.</p> <p></p> <p>As you can see, there may be some commits that are not relevant to the pull request.</p> <p>Feel free to modify the body of the commit message to include only the relevant commits.</p> <p>Note</p> <p>Only the PR Title needs to follow the Conventional Commits specification. The commit message body can be modified to include any relevant commits.</p> <p></p>"},{"location":"contributing/merging_pr/#verify-github-pages-deployment","title":"Verify GitHub Pages Deployment","text":"<p>After merging the pull request, the changes will be deployed to GitHub Pages. Check the website at <code>https://bhklab.github.io/handbook/</code> to verify that the changes are correct.</p>"},{"location":"contributing/merging_pr/#delete-the-branch","title":"Delete the branch","text":"<p>Once the pull request is merged, delete the branch.</p>"},{"location":"contributing/reviews/","title":"Reviewing a Contribution","text":"<p>Note: This document assumes there is an open Pull Request (PR) awaiting review.</p> <p>For more details, see the GitHub Docs on Pull Requests with Required Reviews.</p>"},{"location":"contributing/reviews/#introduction","title":"Introduction","text":"<p>Once a contribution is submitted, a Pull Request (PR) must be created. Before merging into the main branch, the PR must undergo a review process.</p>"},{"location":"contributing/reviews/#terminology","title":"Terminology","text":"<ul> <li>Author: The individual who submitted the contribution.</li> <li>Reviewer: The individual reviewing the contribution.</li> <li>Maintainer: The person responsible for merging the contribution after review.</li> </ul>"},{"location":"contributing/reviews/#understanding-a-review","title":"Understanding a Review","text":"<p>Reviews are discussions around the changes proposed in a PR. They allow for collaborative feedback, ensuring code quality and alignment with project standards.</p> <p>Tip</p> <p>Anyone can review a PR, including those who are not maintainers! If you see a PR from another author, and have suggestions for improvement, feel free to leave a review.</p> <p>For further reading, refer to the Official GitHub Documentation on PR Reviews.</p>"},{"location":"contributing/reviews/#review-statuses","title":"Review Statuses","text":"<p>When submitting a review, you can select from three statuses:</p> <ol> <li>Comment: Provide general feedback without explicitly approving or requesting changes.</li> <li>Approve: Indicate that the changes are acceptable, and approve merging the PR.</li> <li>Request Changes: Highlight issues that need to be addressed before the PR can be merged.</li> </ol>"},{"location":"contributing/reviews/#requesting-a-review-for-a-pull-request","title":"Requesting a Review for a Pull Request","text":"<p>After creating a PR, you can request specific individuals or teams to review it.</p> <ul> <li>Only members of the BHK Lab organization can request reviews from other members.</li> </ul> <p>For more information, check the Official GitHub Documentation on Requesting a Pull Request Review.</p>"},{"location":"contributing/reviews/#adding-to-an-existing-document","title":"Adding to an Existing Document","text":"<p>If a document already exists, you can add to it. Check the bottom of the page for information on current authors.</p>"},{"location":"contributing/reviews/#conclusion","title":"Conclusion","text":"<p>Effective reviews help ensure that contributions meet project standards, improve code quality, and facilitate knowledge sharing within the team. Whether you're an author, reviewer, or maintainer, understanding the review process is essential to contributing successfully.</p>"},{"location":"disciplines/temp/","title":"Temp","text":"<p>A temporary file to test the navigation bar</p>"},{"location":"onboarding/introduction/","title":"Onboarding Introduction","text":""},{"location":"onboarding/introduction/#what-is-the-handbook","title":"What is the handbook?","text":"<p>The handbook is a collection of resources for the BHK Lab. It is intended to be a resource for all BHK Lab members to learn about the lab, its projects, and how to get involved.</p>"},{"location":"software_development/","title":"Software Development","text":"<p>All things related to software development.</p>"},{"location":"software_development/Cloud/compute_canada_cloud/introduction/","title":"Introduction To Compute Canada Cloud","text":""},{"location":"software_development/Cloud/compute_canada_cloud/introduction/#what-is-the-compute-canada-cloud","title":"What is the Compute Canada Cloud?","text":"<ul> <li>Access to a cloud computing environment with a variety of computing resources</li> <li>CPUs</li> <li>GPUs</li> <li>Memory</li> <li>Storage</li> <li>Networking</li> </ul>"},{"location":"software_development/Languages/","title":"Languages","text":"<p>Ideas for a breakdown:</p>"},{"location":"software_development/Languages/#introduction-to-programming-languages","title":"Introduction to Programming Languages","text":"<ul> <li>What is a Programming Language?</li> <li>Importance of Programming Languages</li> </ul>"},{"location":"software_development/Languages/#high-level-programming-languages","title":"High-level Programming Languages","text":"<ul> <li>Features and Examples</li> <li>R</li> <li>Python</li> <li>JavaScript/Typescript</li> <li>Rust</li> </ul>"},{"location":"software_development/Languages/#scripting-languages","title":"Scripting Languages","text":"<ul> <li>Purpose and Usage</li> <li>Examples</li> <li>Bash</li> <li>Perl</li> <li>Ruby</li> </ul>"},{"location":"software_development/Languages/#domain-specific-languages","title":"Domain-Specific Languages","text":"<ul> <li>Definition</li> <li>Examples</li> <li>SQL</li> <li>HTML</li> </ul>"},{"location":"software_development/Languages/#compiled-vs-interpreted-languages","title":"Compiled vs. Interpreted Languages","text":"<ul> <li>Definitions</li> <li>Key Differences</li> </ul>"},{"location":"software_development/Languages/#programming-paradigms","title":"Programming Paradigms","text":"<ul> <li>Procedural Programming</li> <li>Object-Oriented Programming</li> <li>Functional Programming</li> </ul>"},{"location":"software_development/Languages/#choosing-a-programming-language","title":"Choosing a Programming Language","text":"<ul> <li>Considerations</li> <li>Language Popularity</li> <li>Community and Support</li> </ul>"}]}